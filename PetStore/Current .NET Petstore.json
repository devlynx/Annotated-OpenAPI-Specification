{
	"swagger": "2.0",
	"info": {
		"version": "1.2.3",
		"title": "Swagger Petstore",
		"description": "This is a sample server Petstore server. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key 'special-key' to test the authorization filters.\n\nFind out more about Swagger",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"name": "Swagger",
			"url": "http://swagger.io",
			"email": "mailto:apiteam@swagger.io?subject=Swagger"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"basePath": "/",
	"paths": {
		"/pets": {
			"post": {
				"tags": ["pets"],
				"summary": "Add a new pet to the store",
				"operationId": "addPet",
				"consumes": ["application/json",
				"text/json",
				"application/json-patch+json"],
				"produces": [],
				"parameters": [{
					"name": "body",
					"in": "body",
					"description": "Pet object that needs to be added to the store",
					"required": false,
					"schema": {
						"$ref": "#/definitions/Pet"
					}
				}],
				"responses": {
					"204": {
						"description": "No Content"
					},
					"201": {
						"description": "Pet Created"
					},
					"400": {
						"description": "Invalid Data",
						"schema": {
							"$ref": "#/definitions/JSendBuilder[List[InvalidProperty]]"
						},
						"examples": {
							"Name": "Name cannot be blank ",
							"Other": "Description of another problem"
						}
					}
				},
				"deprecated": false
			}
		}
	},
	"definitions": {
		"Pet": {
			"description": "",
			"required": ["id",
			"name",
			"breed"],
			"type": "object",
			"properties": {
				"id": {
					"description": "Automatically generated id in the form of a GUID",
					"type": "string"
				},
				"name": {
					"description": "Pet Name",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"breed": {
					"enum": ["RoughCollie",
					"Poodle",
					"Mixed"],
					"type": "string"
				},
				"optional": {
					"type": "string"
				}
			}
		},
		"JSendBuilder[List[InvalidProperty]]": {
			"required": ["status"],
			"type": "object",
			"properties": {
				"code": {
					"description": "Only for status code: A numeric code corresponding to the error, if applicable",
					"type": "string"
				},
				"data": {
					"description": "**For status success:** A wrapper for any data returned by the API call. If the call returns no data, data will be set to null.\r\n            **For status fail:** A wrapper for the details of why the request failed.\r\n            **For status error:** A wrapper for any other information about the error, e.g. the conditions that caused the error, stack traces, etc",
					"type": "array",
					"items": {
						"$ref": "#/definitions/InvalidProperty"
					}
				},
				"message": {
					"description": "Only for status error: A meaningful, end-user-readable message, explaining what went wrong.",
					"type": "string"
				},
				"status": {
					"description": "Status of the response",
					"enum": ["success",
					"fail",
					"error"],
					"type": "string"
				}
			}
		},
		"InvalidProperty": {
			"type": "object",
			"properties": {
				"property": {
					"description": "Property name that has a problem.",
					"type": "string"
				},
				"validationError": {
					"description": "What is wrong with this property?",
					"type": "string"
				}
			}
		}
	},
	"securityDefinitions": {
		
	},
	"tags": [{
		"name": "pets",
		"description": "Everything about your Pets"
	},
	{
		"name": "store",
		"description": "Access to Petstore orders"
	},
	{
		"name": "users",
		"description": "Operations about users"
	}]
}